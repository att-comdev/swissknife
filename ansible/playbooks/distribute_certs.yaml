---
- name: Copy the node wise certificates to all nodes.
  hosts: all
  vars:
    cert_root: ../../../certs
  gather_facts: false
  become: true
  tasks:
    - name: Check etcd directory exists
      stat:
        path: /etc/etcd
      register: etcd_dir

    - name: Check kubernetes directory exists
      stat:
        path: /etc/kubernetes
      register: kubernetes_dir

    - name: Backup /etc/kubernetes dir
      shell: "cp -rp /etc/kubernetes /etc/kubernetes.`date +%Y-%m-%d@%H:%M:%S~`"
      ignore_errors: true
      when: kubernetes_dir.stat.exists

    - name: Backup /etc/etcd dir
      shell: "cp -rp /etc/etcd /etc/etcd.`date +%Y-%m-%d@%H:%M:%S~`"
      ignore_errors: true
      when: etcd_dir.stat.exists

    - name: Check kubernetes manifests directory exists
      stat:
        path: /etc/kubernetes/manifests
      register: manifests_dir

    - name: Lock /etc/kubernetes/manifests dir
      shell: "chattr -R +i /etc/kubernetes/manifests"
      ignore_errors: true
      when: manifests_dir.stat.exists

    - name: Get the list of files to be copied
      become: false
      local_action: shell cd "{{ cert_root }}/{{ inventory_hostname }}"; find etc -name "*.pem"
      register: pem_files
      ignore_errors: true

    - debug:
        msg: "Check backups are complete and manifests directory is now locked"
    - pause:
        minutes: 3

    - name: Create temporary certificate storage directories
      shell: mkdir -p "/tmp/$(dirname '{{ item }}')"
      with_items:
        - "{{ pem_files.stdout_lines }}"
      ignore_errors: true

    - name: Copy the certificates to temporary location
      copy:
        src: "{{ cert_root }}/{{ inventory_hostname }}/{{ item }}"
        dest: "/tmp/{{ item }}"
      with_items:
        - "{{ pem_files.stdout_lines }}"
      ignore_errors: true

    - debug:
        msg: "etc pem files now copied to temporary directory"
    - pause:
        minutes: 2

    - name: Lock and copy temporary certificates to nodes
      shell: chattr -i "/{{ item }}" && cp "/tmp/{{ item }}" "/{{ item }}" && chattr +i "/{{ item }}" && diff "/{{ item }}" "/tmp/{{ item }}"
      register: result
      until: result.rc == 0
      with_items:
        - "{{ pem_files.stdout_lines }}"
      ignore_errors: true


- name: Copy the common certificates to control and genesis nodes.
  hosts: control:genesis
  vars:
    cert_root: ../../../certs
    common_certs_dir: control
  gather_facts: false
  become: true
  tasks:
    - name: Get the list of files to be copied
      become: false
      local_action: shell cd "{{ cert_root }}/{{ common_certs_dir }}"; find etc -name "*.pem"
      register: common_pem_files_nc
      ignore_errors: true

    - set_fact:
        common_pem_files: "{{ common_pem_files_nc}}"

    - name: Create temporary certificate storage directories
      shell: mkdir -p "/tmp/$(dirname '{{ item }}')"
      with_items:
        - "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - name: Copy the certificates to temporary location
      copy:
        src: "{{ cert_root }}/{{ common_certs_dir }}/{{ item }}"
        dest: "/tmp/{{ item }}"
      when: "'etc/kubernetes' in item"
      with_items:
        - "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - debug:
        msg: "Check temporary common pem files"
    - pause:
        minutes: 3

    - name: Copy the common certificates for secondary control nodes
      shell: chattr -i "/{{ item }}" && cp "/tmp/{{ item }}" "/{{ item }}" && chattr +i "/{{ item }}" && diff "/{{ item }}" "/tmp/{{ item }}"
      register: result
      until: result.rc == 0
      when: "'etc/kubernetes' in item"
      with_items: "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - name: Create temporary certificate storage directories
      shell: mkdir -p "/tmp/$(dirname '{{ item }}')"
      with_items:
        - "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - name: Copy the certificates to temporary location
      copy:
        src: "{{ cert_root }}/{{ common_certs_dir }}/{{ item }}"
        dest: "/tmp/{{ item }}"
      when: "'cd-cp-master-secondary' not in profile or 'cd-cp-worker-data' not in profile or 'cd-cp-worker-search' not in profile or 'ch-cp-master-secondary' not in profile or 'ch-cp-worker' not in profile or 'ch-cp-worker-data' not in profile or 'ch-cp-worker-search' not in profile or 'cloudharbor-cp-secondary' not in profile or 'cp_r640-secondary' not in profile or 'cp_r740-secondary' not in profile or 'cp_rack10hp_worker' not in profile or 'cp_rack11_worker' not in profile or 'cp_worker' not in profile or 'cp-rack07-worker' not in profile or 'cp-rack07-worker-r630' not in profile or 'cp-rack09-worker' not in profile or 'cp-rack10-worker' not in profile or 'cp-rack11-worker' not in profile or 'cp-worker-dell' not in profile or 'nc-cp-secondary' not in profile or 'nc-cp-secondary-730-adv' not in profile or 'nc-cp-secondary-adv' not in profile"
      with_items:
        - "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - debug:
        msg: "Certificates are now copied into temporary directories for secondary nodes"
    - pause:
        minutes: 3

    - name: Unlock Copy and Lock certificates for secondary control nodes
      shell: chattr -i "/{{ item }}" && cp "/tmp/{{ item }}" "/{{ item }}" && chattr +i "/{{ item }}" && diff "/{{ item }}" "/tmp/{{ item }}"
      register: result
      until: result.rc == 0
      when: "'cd-cp-master-secondary' not in profile or 'cd-cp-worker-data' not in profile or 'cd-cp-worker-search' not in profile or 'ch-cp-master-secondary' not in profile or 'ch-cp-worker' not in profile or 'ch-cp-worker-data' not in profile or 'ch-cp-worker-search' not in profile or 'cloudharbor-cp-secondary' not in profile or 'cp_r640-secondary' not in profile or 'cp_r740-secondary' not in profile or 'cp_rack10hp_worker' not in profile or 'cp_rack11_worker' not in profile or 'cp_worker' not in profile or 'cp-rack07-worker' not in profile or 'cp-rack07-worker-r630' not in profile or 'cp-rack09-worker' not in profile or 'cp-rack10-worker' not in profile or 'cp-rack11-worker' not in profile or 'cp-worker-dell' not in profile or 'nc-cp-secondary' not in profile or 'nc-cp-secondary-730-adv' not in profile or 'nc-cp-secondary-adv' not in profile"
      with_items: "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - debug:
        msg: "Verify files are now immutable"
    - pause:
        minutes: 3
    - name: Find list of etcd containers
      shell: docker ps | awk '{print $NF}' | grep -i etcd
      register: etcd_containers
      ignore_errors: true

    - name: Find list of kubernetes related pods
      shell: docker ps | awk '{print $NF}'| grep -i kubernetes | grep -v etcd
      register: kubernetes_containers
      ignore_errors: true

    - name: Kill the containers
      shell: docker kill --signal=9 {{ item }}
      with_items:
        - "{{ kubernetes_containers.stdout_lines }}"
        - "{{ etcd_containers.stdout_lines }}"
      ignore_errors: true

- name: Copy the common certificates to compute nodes.
  hosts: compute
  vars:
    cert_root: ../../../certs
    common_certs_dir: compute
  gather_facts: false
  become: true
  tasks:
    - name: Get the list of files to be copied for compute nodes
      become: false
      local_action: shell cd "{{ cert_root }}/{{ common_certs_dir }}"; find etc -name "*.pem"
      register: common_pem_files
      ignore_errors: true

    - name: Create temporary certificate storage directories for compute nodes
      shell: mkdir -p "/tmp/$(dirname '{{ item }}')"
      with_items:
        - "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - name: Copy the certificates to temporary location for compute nodes
      copy:
        src: "{{ cert_root }}/{{ common_certs_dir }}/{{ item }}"
        dest: "/tmp/{{ item }}"
      with_items:
        - "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

    - name: Unlock Copy and Lock the common certificates for compute nodes
      shell: chattr -i "/{{ item }}" && cp "/tmp/{{ item }}" "/{{ item }}" && chattr +i "/{{ item }}" && diff "/{{ item }}" "/tmp/{{ item }}"
      register: result
      until: result.rc == 0
      with_items:
        - "{{ common_pem_files.stdout_lines }}"
      ignore_errors: true

- name: Update apiserver-both
  hosts: genesis:control
  gather_facts: false
  become: true
  tasks:
    - name: Update apiserver-both
      shell: rm /etc/kubernetes/apiserver/pki/apiserver-both.pem
      ignore_errors: true

- name: Restart kubelet
  hosts: genesis:control:compute
  gather_facts: false
  become: true
  tasks:
    - debug:
        msg: "Pause prior to starting Kubelet"
    - pause:
        minutes: 3
    - name: restart kubelet
      service: name=kubelet state=restarted
